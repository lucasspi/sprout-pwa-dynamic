{"version":3,"sources":["redux/actionsTypes.js","redux/dash/reducer.js","redux/reducers.js","AppRenderer.js","redux/store.js","index.js"],"names":["STORAGE_TOKEN","STORAGE_CID","STORAGE_PHONE","STORAGE_USER","STORAGE_INTERESTS","STORAGE_POINTS","STORAGE_BUSINESS_INDEX","initialState","token","cid","phone","user","interests","points","businessIndex","reducers","combineReducers","InfosDash","state","action","type","App","React","lazy","ReactDOM","render","store","createStore","fallback","className","document","getElementById","then","x","require"],"mappings":"8MAIaA,EAAgB,gBAChBC,EAAc,cACdC,EAAgB,gBAChBC,EAAe,eACfC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAyB,yBCChCC,EAAe,CACjBC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,UAAW,GACXC,OAAQ,GACRC,cAAe,GCXJC,EAJEC,YAAgB,CAC/BC,UDiBuB,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKpB,EACH,OAAO,2BACFkB,GADL,IAEEV,MAAOW,EAAOX,QAElB,KAAKP,EACH,OAAO,2BACFiB,GADL,IAEET,IAAKU,EAAOV,MAEhB,KAAKP,EACH,OAAO,2BACFgB,GADL,IAEER,MAAOS,EAAOT,QAElB,KAAKP,EACH,OAAO,2BACFe,GADL,IAEEP,KAAMQ,EAAOR,OAEjB,KAAKP,EACH,OAAO,2BACFc,GADL,IAEEN,UAAWO,EAAOP,YAEtB,KAAKP,EACH,OAAO,2BACFa,GADL,IAEEL,OAAQM,EAAON,SAEnB,KAAKP,EACH,OAAO,2BACFY,GADL,IAEEJ,cAAeK,EAAOL,gBAE1B,QACE,OAAOI,MEtDb,ICC+BX,EDDzBc,EAAMC,IAAMC,MAAK,kBAAM,uDAE7BC,IAASC,OACP,kBAAC,IAAD,CAAUC,MCAMC,YACVZ,EACAR,IDDJ,kBAAC,WAAD,CAAUqB,SAAU,yBAAKC,UAAU,aACjC,kBAACR,EAAD,QAGJS,SAASC,eAAe,U,gEEb1B,+CAUE,4CAAmDC,MAAK,SAAAC,GACrDC,EAAQ,Q","file":"static/js/main.fb6c5218.chunk.js","sourcesContent":["\n// DASHBOARD\nexport const STORAGE_TRANSACTIONS = 'STORAGE_TRANSACTIONS';\nexport const STORAGE_VOUCHERS = 'STORAGE_VOUCHERS';\nexport const STORAGE_TOKEN = 'STORAGE_TOKEN';\nexport const STORAGE_CID = 'STORAGE_CID';\nexport const STORAGE_PHONE = 'STORAGE_PHONE';\nexport const STORAGE_USER = 'STORAGE_USER';\nexport const STORAGE_INTERESTS = 'STORAGE_INTERESTS';\nexport const STORAGE_POINTS = 'STORAGE_POINTS';\nexport const STORAGE_BUSINESS_INDEX = 'STORAGE_BUSINESS_INDEX';\n\nexport * from \"./dash/actions\";","\nimport {\n    STORAGE_TOKEN,\n    STORAGE_CID,\n    STORAGE_PHONE,\n    STORAGE_USER,\n    STORAGE_INTERESTS,\n    STORAGE_POINTS,\n    STORAGE_BUSINESS_INDEX,\n} from '../actionsTypes.js';\n\nconst initialState = {\n    token: \"\",\n    cid: \"\",\n    phone: \"\",\n    user: {},\n    interests: \"\",\n    points: \"\",\n    businessIndex: 0\n};\n\nexport const dashboard = (state = initialState, action) => {\n  switch (action.type) {\n    case STORAGE_TOKEN:\n      return { \n        ...state, \n        token: action.token\n      };\n    case STORAGE_CID:\n      return { \n        ...state, \n        cid: action.cid\n      };\n    case STORAGE_PHONE:\n      return { \n        ...state, \n        phone: action.phone\n      };\n    case STORAGE_USER:\n      return { \n        ...state, \n        user: action.user\n      };\n    case STORAGE_INTERESTS:\n      return { \n        ...state, \n        interests: action.interests\n      };\n    case STORAGE_POINTS:\n      return { \n        ...state, \n        points: action.points\n      };\n    case STORAGE_BUSINESS_INDEX:\n      return { \n        ...state, \n        businessIndex: action.businessIndex\n      };\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { dashboard } from './dash/reducer';\n\nconst reducers = combineReducers({\n  InfosDash: dashboard\n});\n\nexport default reducers;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nconst App = React.lazy(() => import(/* webpackChunkName: \"App\" */'./App.js' ));\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <Suspense fallback={<div className=\"loading\" />}>\n      <App />\n    </Suspense>\n  </Provider>,\n  document.getElementById('root')\n);\n/*\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport reducers from './reducers';\n\n\n\nexport function configureStore(initialState) {\n\n    const store = createStore(\n        reducers,\n        initialState\n    );\n\n\n    if (module.hot) {\n        module.hot.accept('./reducers', () => {\n            const nextRootReducer = require('./reducers');\n            store.replaceReducer(nextRootReducer);\n        });\n    }\n\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/custom_styles.css';\nimport './css/bootstrap.rtl.only.min.css';\nimport './css/bootstrap.min.css';\nimport './css/sass/themes/gogo.light.purple.scss';\n\nimport AppRenderer from './AppRenderer';\n\nlet render = () => {\n  import('./css/sass/themes/gogo.light.purple.scss').then(x => {\n     require('./AppRenderer');\n  });\n};\nrender();"],"sourceRoot":""}