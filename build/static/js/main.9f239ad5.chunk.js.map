{"version":3,"sources":["AppRenderer.js","redux/actionsTypes.js","redux/dash/reducer.js","redux/reducers.js","redux/store.js","index.js"],"names":["App","React","lazy","ReactDOM","render","store","configureStore","fallback","className","document","getElementById","STORAGE_TOKEN","initialState","token","reducers","combineReducers","InfosDash","state","action","type","createStore","then","x","require"],"mappings":"6IAAA,0DAKMA,EAAMC,IAAMC,MAAK,kBAAM,sDAE7BC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,eACf,kBAAC,WAAD,CAAUC,SAAU,yBAAKC,UAAU,aACjC,kBAACR,EAAD,QAGJS,SAASC,eAAe,U,iFCTbC,EAAgB,gBCCvBC,EAAe,CACjBC,MAAO,ICCIC,EAJEC,YAAgB,CAC/BC,UDKuB,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKR,EACH,OAAO,2BACFM,GADL,IAEEJ,MAAOK,EAAOL,QAElB,QACE,OAAOI,MEXN,SAASX,EAAeM,GAe3B,OAbcQ,YACVN,EACAF,K,gECVR,+CAUE,4CAAmDS,MAAK,SAAAC,GACrDC,EAAQ,Q","file":"static/js/main.9f239ad5.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nconst App = React.lazy(() => import(/* webpackChunkName: \"App\" */'./App.js' ));\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <Suspense fallback={<div className=\"loading\" />}>\n      <App />\n    </Suspense>\n  </Provider>,\n  document.getElementById('root')\n);\n/*\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\n","\n// DASHBOARD\nexport const STORAGE_TRANSACTIONS = 'STORAGE_TRANSACTIONS';\nexport const STORAGE_VOUCHERS = 'STORAGE_VOUCHERS';\nexport const STORAGE_TOKEN = 'STORAGE_TOKEN';\n\nexport * from \"./dash/actions\";","\nimport {\n    STORAGE_TOKEN,\n} from '../actionsTypes.js';\n\nconst initialState = {\n    token: \"\"\n};\n\nexport const dashboard = (state = initialState, action) => {\n  switch (action.type) {\n    case STORAGE_TOKEN:\n      return { \n        ...state, \n        token: action.token\n      };\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { dashboard } from './dash/reducer';\n\nconst reducers = combineReducers({\n  InfosDash: dashboard\n});\n\nexport default reducers;","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport reducers from './reducers';\n\n\n\nexport function configureStore(initialState) {\n\n    const store = createStore(\n        reducers,\n        initialState\n    );\n\n\n    if (module.hot) {\n        module.hot.accept('./reducers', () => {\n            const nextRootReducer = require('./reducers');\n            store.replaceReducer(nextRootReducer);\n        });\n    }\n\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/custom_styles.css';\nimport './css/bootstrap.rtl.only.min.css';\nimport './css/bootstrap.min.css';\nimport './css/sass/themes/gogo.light.purple.scss';\n\nimport AppRenderer from './AppRenderer';\n\nlet render = () => {\n  import('./css/sass/themes/gogo.light.purple.scss').then(x => {\n     require('./AppRenderer');\n  });\n};\nrender();"],"sourceRoot":""}