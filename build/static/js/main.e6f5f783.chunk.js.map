{"version":3,"sources":["redux/actionsTypes.js","redux/dash/reducer.js","redux/reducers.js","AppRenderer.js","redux/store.js","index.js"],"names":["STORAGE_TOKEN","STORAGE_CID","STORAGE_PHONE","STORAGE_USER","STORAGE_INTERESTS","STORAGE_POINTS","STORAGE_BUSINESS_INDEX","STORAGE_WALLET_SETUP","initialState","token","cid","phone","user","interests","points","businessIndex","walletSetup","reducers","combineReducers","InfosDash","state","action","type","App","React","lazy","ReactDOM","render","store","createStore","fallback","className","document","getElementById","then","x","require"],"mappings":"8MAIaA,EAAgB,gBAChBC,EAAc,cACdC,EAAgB,gBAChBC,EAAe,eACfC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAyB,yBACzBC,EAAuB,uBCC9BC,EAAe,CACjBC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,UAAW,GACXC,OAAQ,GACRC,cAAe,EACfC,YAAa,ICbFC,EAJEC,YAAgB,CAC/BC,UDmBuB,WAAmC,IAAlCC,EAAiC,uDAAzBZ,EAAca,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKtB,EACH,OAAO,2BACFoB,GADL,IAEEX,MAAOY,EAAOZ,QAElB,KAAKR,EACH,OAAO,2BACFmB,GADL,IAEEV,IAAKW,EAAOX,MAEhB,KAAKR,EACH,OAAO,2BACFkB,GADL,IAEET,MAAOU,EAAOV,QAElB,KAAKR,EACH,OAAO,2BACFiB,GADL,IAEER,KAAMS,EAAOT,OAEjB,KAAKR,EACH,OAAO,2BACFgB,GADL,IAEEP,UAAWQ,EAAOR,YAEtB,KAAKR,EACH,OAAO,2BACFe,GADL,IAEEN,OAAQO,EAAOP,SAEnB,KAAKR,EACH,OAAO,2BACFc,GADL,IAEEL,cAAeM,EAAON,gBAE1B,KAAKR,EACD,OAAO,2BACAa,GADP,IAEIJ,YAAaK,EAAOL,cAE5B,QACE,OAAOI,ME7Db,ICC+BZ,EDDzBe,EAAMC,IAAMC,MAAK,kBAAM,uDAE7BC,IAASC,OACP,kBAAC,IAAD,CAAUC,MCAMC,YACVZ,EACAT,IDDJ,kBAAC,WAAD,CAAUsB,SAAU,yBAAKC,UAAU,aACjC,kBAACR,EAAD,QAGJS,SAASC,eAAe,U,gEEb1B,+CAUE,4CAAmDC,MAAK,SAAAC,GACrDC,EAAQ,Q","file":"static/js/main.e6f5f783.chunk.js","sourcesContent":["\r\n// DASHBOARD\r\nexport const STORAGE_TRANSACTIONS = 'STORAGE_TRANSACTIONS';\r\nexport const STORAGE_VOUCHERS = 'STORAGE_VOUCHERS';\r\nexport const STORAGE_TOKEN = 'STORAGE_TOKEN';\r\nexport const STORAGE_CID = 'STORAGE_CID';\r\nexport const STORAGE_PHONE = 'STORAGE_PHONE';\r\nexport const STORAGE_USER = 'STORAGE_USER';\r\nexport const STORAGE_INTERESTS = 'STORAGE_INTERESTS';\r\nexport const STORAGE_POINTS = 'STORAGE_POINTS';\r\nexport const STORAGE_BUSINESS_INDEX = 'STORAGE_BUSINESS_INDEX';\r\nexport const STORAGE_WALLET_SETUP = 'STORAGE_WALLET_SETUP';\r\n\r\nexport * from \"./dash/actions\";","\r\nimport {\r\n    STORAGE_TOKEN,\r\n    STORAGE_CID,\r\n    STORAGE_PHONE,\r\n    STORAGE_USER,\r\n    STORAGE_INTERESTS,\r\n    STORAGE_POINTS,\r\n    STORAGE_BUSINESS_INDEX,\r\n    STORAGE_WALLET_SETUP\r\n} from '../actionsTypes.js';\r\n\r\nconst initialState = {\r\n    token: \"\",\r\n    cid: \"\",\r\n    phone: \"\",\r\n    user: {},\r\n    interests: \"\",\r\n    points: \"\",\r\n    businessIndex: 0,\r\n    walletSetup: {}\r\n};\r\n\r\nexport const dashboard = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case STORAGE_TOKEN:\r\n      return { \r\n        ...state, \r\n        token: action.token\r\n      };\r\n    case STORAGE_CID:\r\n      return { \r\n        ...state, \r\n        cid: action.cid\r\n      };\r\n    case STORAGE_PHONE:\r\n      return { \r\n        ...state, \r\n        phone: action.phone\r\n      };\r\n    case STORAGE_USER:\r\n      return { \r\n        ...state, \r\n        user: action.user\r\n      };\r\n    case STORAGE_INTERESTS:\r\n      return { \r\n        ...state, \r\n        interests: action.interests\r\n      };\r\n    case STORAGE_POINTS:\r\n      return { \r\n        ...state, \r\n        points: action.points\r\n      };\r\n    case STORAGE_BUSINESS_INDEX:\r\n      return { \r\n        ...state, \r\n        businessIndex: action.businessIndex\r\n      };\r\n    case STORAGE_WALLET_SETUP:\r\n        return {\r\n            ...state,\r\n            walletSetup: action.walletSetup\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { dashboard } from './dash/reducer';\r\n\r\nconst reducers = combineReducers({\r\n  InfosDash: dashboard\r\n});\r\n\r\nexport default reducers;","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nconst App = React.lazy(() => import(/* webpackChunkName: \"App\" */'./App.js' ));\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n      <App />\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\n * If you want your app to work offline and load faster, you can change\r\n * unregister() to register() below. Note this comes with some pitfalls.\r\n * Learn more about service workers: https://bit.ly/CRA-PWA\r\n */\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport reducers from './reducers';\r\n\r\n\r\n\r\nexport function configureStore(initialState) {\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState\r\n    );\r\n\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/custom_styles.css';\r\nimport './css/bootstrap.rtl.only.min.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/sass/themes/gogo.light.purple.scss';\r\n\r\nimport AppRenderer from './AppRenderer';\r\n\r\nlet render = () => {\r\n  import('./css/sass/themes/gogo.light.purple.scss').then(x => {\r\n     require('./AppRenderer');\r\n  });\r\n};\r\nrender();"],"sourceRoot":""}